goalset:
several sets of match rules
	the match rules "AND" together
	the sets "OR" together

goalnode:
goalset with header info, 
header info: node_name, succ_node_name, prec_node_name, heuristic_func.

<class: Goal>
a set of match rules that "AND" together

<class: Goaltree>
a set of goalnode



TODO:15p:self-extract-subgoal(may use ad hoc hypothesis)(via differences between matched and not-matched) ; features/eigens of matching on a node
TODO:add goaltree to info when bfs, trim below nodes, a state match a node in a 'near1' which is nearest will be extracted first

exec
python3 atest-*.py [ 1demo ]

exp. data
	15p-rev:
	#arr=[7, 6, 15, 11, 8, 1, 2, 5, 9, 14, 10, 12, 0, 4, 3, 13] # slow # appear exactly same board in the solution path.
	#arr=[13, 14, 0, 4, 5, 1, 15, 7, 6, 10, 12, 8, 9, 11, 2, 3] # slow # appear exactly same board in the solution path.
	#arr=[6, 4, 11, 1, 5, 14, 12, 0, 7, 13, 2, 10, 15, 3, 9, 8] # very slow

TODO:
space-filling curve
	as problem size extend
	use multiple curves

TODO:
method to clear visited nodes

choice:
@ELGT
	wkeys:
		nearest first
		farest first
	round-monitor: sel by:
		L:change quests
			L:crossover
				other's nodes
				other's weights # direct copy, next level loop will have time to adjust
				L:mutate
					weights
					# TODO
					change constraints in nodes
					change nodes
	round-species:
	mutate:
		weights - change order randomly
		reversed match (==excluded)
		constraints - diverge, merge
		goal - AND(concatenate), OR(forms a goalset)
	crossover:
		weights - i.e. change order to be as the similar as the other
		other nodes - take a use

----

find the same
with different functions
finder needs survive
findee needs survive

review the sol.
re-flood it
with shortest guaranteed methods


